// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

#include "event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

extern PROTOBUF_INTERNAL_EXPORT_event_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_make_actor_event_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_event_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_make_bullet_event_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_event_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_make_move_event_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_event_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_take_damage_event_2eproto;
namespace msg {
class mainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<main> _instance;
} _main_default_instance_;
class make_moveDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<make_move> _instance;
} _make_move_default_instance_;
class make_actorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<make_actor> _instance;
} _make_actor_default_instance_;
class take_damageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<take_damage> _instance;
} _take_damage_default_instance_;
class make_bulletDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<make_bullet> _instance;
} _make_bullet_default_instance_;
}  // namespace msg
static void InitDefaultsmain_event_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msg::_main_default_instance_;
    new (ptr) ::msg::main();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msg::main::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_main_event_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsmain_event_2eproto}, {
      &scc_info_make_bullet_event_2eproto.base,
      &scc_info_make_move_event_2eproto.base,
      &scc_info_make_actor_event_2eproto.base,
      &scc_info_take_damage_event_2eproto.base,}};

static void InitDefaultsmake_move_event_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msg::_make_move_default_instance_;
    new (ptr) ::msg::make_move();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msg::make_move::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_make_move_event_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmake_move_event_2eproto}, {}};

static void InitDefaultsmake_actor_event_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msg::_make_actor_default_instance_;
    new (ptr) ::msg::make_actor();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msg::make_actor::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_make_actor_event_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmake_actor_event_2eproto}, {}};

static void InitDefaultstake_damage_event_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msg::_take_damage_default_instance_;
    new (ptr) ::msg::take_damage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msg::take_damage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_take_damage_event_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultstake_damage_event_2eproto}, {}};

static void InitDefaultsmake_bullet_event_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::msg::_make_bullet_default_instance_;
    new (ptr) ::msg::make_bullet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::msg::make_bullet::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_make_bullet_event_2eproto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsmake_bullet_event_2eproto}, {}};

void InitDefaults_event_2eproto() {
  ::google::protobuf::internal::InitSCC(&scc_info_main_event_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_make_move_event_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_make_actor_event_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_take_damage_event_2eproto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_make_bullet_event_2eproto.base);
}

::google::protobuf::Metadata file_level_metadata_event_2eproto[5];
constexpr ::google::protobuf::EnumDescriptor const** file_level_enum_descriptors_event_2eproto = nullptr;
constexpr ::google::protobuf::ServiceDescriptor const** file_level_service_descriptors_event_2eproto = nullptr;

const ::google::protobuf::uint32 TableStruct_event_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::msg::main, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::msg::main, id_),
  PROTOBUF_FIELD_OFFSET(::msg::main, flag_),
  PROTOBUF_FIELD_OFFSET(::msg::main, client_command_),
  PROTOBUF_FIELD_OFFSET(::msg::main, bullet_),
  PROTOBUF_FIELD_OFFSET(::msg::main, move_),
  PROTOBUF_FIELD_OFFSET(::msg::main, actor_),
  PROTOBUF_FIELD_OFFSET(::msg::main, damage_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::msg::make_move, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::msg::make_move, type_),
  PROTOBUF_FIELD_OFFSET(::msg::make_move, id_),
  PROTOBUF_FIELD_OFFSET(::msg::make_move, x_),
  PROTOBUF_FIELD_OFFSET(::msg::make_move, y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::msg::make_actor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::msg::make_actor, name_),
  PROTOBUF_FIELD_OFFSET(::msg::make_actor, creator_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::msg::take_damage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::msg::take_damage, damage_),
  PROTOBUF_FIELD_OFFSET(::msg::take_damage, type_),
  PROTOBUF_FIELD_OFFSET(::msg::take_damage, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::msg::make_bullet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::msg::make_bullet, parent_),
  PROTOBUF_FIELD_OFFSET(::msg::make_bullet, vector_x_),
  PROTOBUF_FIELD_OFFSET(::msg::make_bullet, vector_y_),
  PROTOBUF_FIELD_OFFSET(::msg::make_bullet, bullet_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::msg::main)},
  { 12, -1, sizeof(::msg::make_move)},
  { 21, -1, sizeof(::msg::make_actor)},
  { 28, -1, sizeof(::msg::take_damage)},
  { 36, -1, sizeof(::msg::make_bullet)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::msg::_main_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::msg::_make_move_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::msg::_make_actor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::msg::_take_damage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::msg::_make_bullet_default_instance_),
};

::google::protobuf::internal::AssignDescriptorsTable assign_descriptors_table_event_2eproto = {
  {}, AddDescriptors_event_2eproto, "event.proto", schemas,
  file_default_instances, TableStruct_event_2eproto::offsets,
  file_level_metadata_event_2eproto, 5, file_level_enum_descriptors_event_2eproto, file_level_service_descriptors_event_2eproto,
};

const char descriptor_table_protodef_event_2eproto[] =
  "\n\013event.proto\022\003msg\"\272\001\n\004main\022\n\n\002id\030\001 \001(\005\022"
  "\014\n\004flag\030\002 \001(\005\022\026\n\016client_command\030\003 \003(\005\022 \n"
  "\006bullet\030\004 \003(\0132\020.msg.make_bullet\022\034\n\004move\030"
  "\005 \003(\0132\016.msg.make_move\022\036\n\005actor\030\006 \003(\0132\017.m"
  "sg.make_actor\022 \n\006damage\030\007 \003(\0132\020.msg.take"
  "_damage\";\n\tmake_move\022\014\n\004type\030\001 \001(\005\022\n\n\002id"
  "\030\002 \001(\005\022\t\n\001x\030\003 \001(\005\022\t\n\001y\030\004 \001(\005\".\n\nmake_act"
  "or\022\014\n\004name\030\001 \001(\005\022\022\n\ncreator_id\030\002 \001(\005\"7\n\013"
  "take_damage\022\016\n\006damage\030\001 \001(\005\022\014\n\004type\030\002 \001("
  "\005\022\n\n\002id\030\003 \001(\005\"T\n\013make_bullet\022\016\n\006parent\030\001"
  " \001(\005\022\020\n\010vector_x\030\002 \001(\005\022\020\n\010vector_y\030\003 \001(\005"
  "\022\021\n\tbullet_id\030\004 \001(\005b\006proto3"
  ;
::google::protobuf::internal::DescriptorTable descriptor_table_event_2eproto = {
  false, InitDefaults_event_2eproto, 
  descriptor_table_protodef_event_2eproto,
  "event.proto", &assign_descriptors_table_event_2eproto, 467,
};

void AddDescriptors_event_2eproto() {
  static constexpr ::google::protobuf::internal::InitFunc deps[1] =
  {
  };
 ::google::protobuf::internal::AddDescriptors(&descriptor_table_event_2eproto, deps, 0);
}

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_event_2eproto = []() { AddDescriptors_event_2eproto(); return true; }();
namespace msg {

// ===================================================================

void main::InitAsDefaultInstance() {
}
class main::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int main::kIdFieldNumber;
const int main::kFlagFieldNumber;
const int main::kClientCommandFieldNumber;
const int main::kBulletFieldNumber;
const int main::kMoveFieldNumber;
const int main::kActorFieldNumber;
const int main::kDamageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

main::main()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.main)
}
main::main(const main& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr),
      client_command_(from.client_command_),
      bullet_(from.bullet_),
      move_(from.move_),
      actor_(from.actor_),
      damage_(from.damage_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&id_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:msg.main)
}

void main::SharedCtor() {
  ::google::protobuf::internal::InitSCC(
      &scc_info_main_event_2eproto.base);
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&id_)) + sizeof(flag_));
}

main::~main() {
  // @@protoc_insertion_point(destructor:msg.main)
  SharedDtor();
}

void main::SharedDtor() {
}

void main::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const main& main::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_main_event_2eproto.base);
  return *internal_default_instance();
}


void main::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.main)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_command_.Clear();
  bullet_.Clear();
  move_.Clear();
  actor_.Clear();
  damage_.Clear();
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&id_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* main::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<main*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 flag = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_flag(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // repeated int32 client_command = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) == 26) {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::google::protobuf::internal::PackedInt32Parser;
          object = msg->mutable_client_command();
          if (size > end - ptr) goto len_delim_till_end;
          auto newend = ptr + size;
          if (size) ptr = parser_till_end(ptr, newend, object, ctx);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr == newend);
          break;
        } else if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        do {
          msg->add_client_command(::google::protobuf::internal::ReadVarint(&ptr));
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 24 && (ptr += 1));
        break;
      }
      // repeated .msg.make_bullet bullet = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 34) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::msg::make_bullet::_InternalParse;
          object = msg->add_bullet();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 34 && (ptr += 1));
        break;
      }
      // repeated .msg.make_move move = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) != 42) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::msg::make_move::_InternalParse;
          object = msg->add_move();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 42 && (ptr += 1));
        break;
      }
      // repeated .msg.make_actor actor = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) != 50) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::msg::make_actor::_InternalParse;
          object = msg->add_actor();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 50 && (ptr += 1));
        break;
      }
      // repeated .msg.take_damage damage = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) != 58) goto handle_unusual;
        do {
          ptr = ::google::protobuf::io::ReadSize(ptr, &size);
          GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
          parser_till_end = ::msg::take_damage::_InternalParse;
          object = msg->add_damage();
          if (size > end - ptr) goto len_delim_till_end;
          ptr += size;
          GOOGLE_PROTOBUF_PARSER_ASSERT(ctx->ParseExactRange(
              {parser_till_end, object}, ptr - size, ptr));
          if (ptr >= end) break;
        } while ((::google::protobuf::io::UnalignedLoad<::google::protobuf::uint64>(ptr) & 255) == 58 && (ptr += 1));
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
len_delim_till_end:
  return ctx->StoreAndTailCall(ptr, end, {_InternalParse, msg},
                               {parser_till_end, object}, size);
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool main::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.main)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 flag = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 client_command = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (26 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_client_command())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 26u, input, this->mutable_client_command())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .msg.make_bullet bullet = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (34 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_bullet()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .msg.make_move move = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (42 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_move()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .msg.make_actor actor = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (50 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_actor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .msg.take_damage damage = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (58 & 0xFF)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_damage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.main)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.main)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void main::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.main)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 flag = 2;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->flag(), output);
  }

  // repeated int32 client_command = 3;
  if (this->client_command_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_client_command_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->client_command_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->client_command(i), output);
  }

  // repeated .msg.make_bullet bullet = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bullet_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->bullet(static_cast<int>(i)),
      output);
  }

  // repeated .msg.make_move move = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->move_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->move(static_cast<int>(i)),
      output);
  }

  // repeated .msg.make_actor actor = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actor_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->actor(static_cast<int>(i)),
      output);
  }

  // repeated .msg.take_damage damage = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->damage_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->damage(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.main)
}

::google::protobuf::uint8* main::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.main)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 flag = 2;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->flag(), target);
  }

  // repeated int32 client_command = 3;
  if (this->client_command_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        _client_command_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->client_command_, target);
  }

  // repeated .msg.make_bullet bullet = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->bullet_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->bullet(static_cast<int>(i)), target);
  }

  // repeated .msg.make_move move = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->move_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->move(static_cast<int>(i)), target);
  }

  // repeated .msg.make_actor actor = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->actor_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->actor(static_cast<int>(i)), target);
  }

  // repeated .msg.take_damage damage = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->damage_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->damage(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.main)
  return target;
}

size_t main::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.main)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 client_command = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->client_command_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast<::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    _client_command_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // repeated .msg.make_bullet bullet = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->bullet_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->bullet(static_cast<int>(i)));
    }
  }

  // repeated .msg.make_move move = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->move_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->move(static_cast<int>(i)));
    }
  }

  // repeated .msg.make_actor actor = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->actor_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->actor(static_cast<int>(i)));
    }
  }

  // repeated .msg.take_damage damage = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->damage_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->damage(static_cast<int>(i)));
    }
  }

  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 flag = 2;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void main::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.main)
  GOOGLE_DCHECK_NE(&from, this);
  const main* source =
      ::google::protobuf::DynamicCastToGenerated<main>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.main)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.main)
    MergeFrom(*source);
  }
}

void main::MergeFrom(const main& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.main)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  client_command_.MergeFrom(from.client_command_);
  bullet_.MergeFrom(from.bullet_);
  move_.MergeFrom(from.move_);
  actor_.MergeFrom(from.actor_);
  damage_.MergeFrom(from.damage_);
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void main::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.main)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void main::CopyFrom(const main& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.main)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool main::IsInitialized() const {
  return true;
}

void main::Swap(main* other) {
  if (other == this) return;
  InternalSwap(other);
}
void main::InternalSwap(main* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  client_command_.InternalSwap(&other->client_command_);
  CastToBase(&bullet_)->InternalSwap(CastToBase(&other->bullet_));
  CastToBase(&move_)->InternalSwap(CastToBase(&other->move_));
  CastToBase(&actor_)->InternalSwap(CastToBase(&other->actor_));
  CastToBase(&damage_)->InternalSwap(CastToBase(&other->damage_));
  swap(id_, other->id_);
  swap(flag_, other->flag_);
}

::google::protobuf::Metadata main::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_event_2eproto);
  return ::file_level_metadata_event_2eproto[kIndexInFileMessages];
}


// ===================================================================

void make_move::InitAsDefaultInstance() {
}
class make_move::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int make_move::kTypeFieldNumber;
const int make_move::kIdFieldNumber;
const int make_move::kXFieldNumber;
const int make_move::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

make_move::make_move()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.make_move)
}
make_move::make_move(const make_move& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&type_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:msg.make_move)
}

void make_move::SharedCtor() {
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&type_)) + sizeof(y_));
}

make_move::~make_move() {
  // @@protoc_insertion_point(destructor:msg.make_move)
  SharedDtor();
}

void make_move::SharedDtor() {
}

void make_move::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const make_move& make_move::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_make_move_event_2eproto.base);
  return *internal_default_instance();
}


void make_move::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.make_move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&type_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* make_move::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<make_move*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 x = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 y = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool make_move::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.make_move)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.make_move)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.make_move)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void make_move::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.make_move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // int32 x = 3;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->x(), output);
  }

  // int32 y = 4;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.make_move)
}

::google::protobuf::uint8* make_move::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.make_move)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->type(), target);
  }

  // int32 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // int32 x = 3;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->x(), target);
  }

  // int32 y = 4;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.make_move)
  return target;
}

size_t make_move::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.make_move)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 x = 3;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 4;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void make_move::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.make_move)
  GOOGLE_DCHECK_NE(&from, this);
  const make_move* source =
      ::google::protobuf::DynamicCastToGenerated<make_move>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.make_move)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.make_move)
    MergeFrom(*source);
  }
}

void make_move::MergeFrom(const make_move& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.make_move)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void make_move::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.make_move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void make_move::CopyFrom(const make_move& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.make_move)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool make_move::IsInitialized() const {
  return true;
}

void make_move::Swap(make_move* other) {
  if (other == this) return;
  InternalSwap(other);
}
void make_move::InternalSwap(make_move* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
}

::google::protobuf::Metadata make_move::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_event_2eproto);
  return ::file_level_metadata_event_2eproto[kIndexInFileMessages];
}


// ===================================================================

void make_actor::InitAsDefaultInstance() {
}
class make_actor::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int make_actor::kNameFieldNumber;
const int make_actor::kCreatorIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

make_actor::make_actor()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.make_actor)
}
make_actor::make_actor(const make_actor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&name_, &from.name_,
    static_cast<size_t>(reinterpret_cast<char*>(&creator_id_) -
    reinterpret_cast<char*>(&name_)) + sizeof(creator_id_));
  // @@protoc_insertion_point(copy_constructor:msg.make_actor)
}

void make_actor::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&creator_id_) -
      reinterpret_cast<char*>(&name_)) + sizeof(creator_id_));
}

make_actor::~make_actor() {
  // @@protoc_insertion_point(destructor:msg.make_actor)
  SharedDtor();
}

void make_actor::SharedDtor() {
}

void make_actor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const make_actor& make_actor::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_make_actor_event_2eproto.base);
  return *internal_default_instance();
}


void make_actor::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.make_actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&creator_id_) -
      reinterpret_cast<char*>(&name_)) + sizeof(creator_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* make_actor::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<make_actor*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_name(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 creator_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_creator_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool make_actor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.make_actor)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &name_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 creator_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &creator_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.make_actor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.make_actor)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void make_actor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.make_actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 name = 1;
  if (this->name() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->name(), output);
  }

  // int32 creator_id = 2;
  if (this->creator_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->creator_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.make_actor)
}

::google::protobuf::uint8* make_actor::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.make_actor)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 name = 1;
  if (this->name() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->name(), target);
  }

  // int32 creator_id = 2;
  if (this->creator_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->creator_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.make_actor)
  return target;
}

size_t make_actor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.make_actor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 name = 1;
  if (this->name() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->name());
  }

  // int32 creator_id = 2;
  if (this->creator_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->creator_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void make_actor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.make_actor)
  GOOGLE_DCHECK_NE(&from, this);
  const make_actor* source =
      ::google::protobuf::DynamicCastToGenerated<make_actor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.make_actor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.make_actor)
    MergeFrom(*source);
  }
}

void make_actor::MergeFrom(const make_actor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.make_actor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name() != 0) {
    set_name(from.name());
  }
  if (from.creator_id() != 0) {
    set_creator_id(from.creator_id());
  }
}

void make_actor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.make_actor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void make_actor::CopyFrom(const make_actor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.make_actor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool make_actor::IsInitialized() const {
  return true;
}

void make_actor::Swap(make_actor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void make_actor::InternalSwap(make_actor* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(name_, other->name_);
  swap(creator_id_, other->creator_id_);
}

::google::protobuf::Metadata make_actor::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_event_2eproto);
  return ::file_level_metadata_event_2eproto[kIndexInFileMessages];
}


// ===================================================================

void take_damage::InitAsDefaultInstance() {
}
class take_damage::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int take_damage::kDamageFieldNumber;
const int take_damage::kTypeFieldNumber;
const int take_damage::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

take_damage::take_damage()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.take_damage)
}
take_damage::take_damage(const take_damage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&damage_, &from.damage_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&damage_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:msg.take_damage)
}

void take_damage::SharedCtor() {
  ::memset(&damage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&damage_)) + sizeof(id_));
}

take_damage::~take_damage() {
  // @@protoc_insertion_point(destructor:msg.take_damage)
  SharedDtor();
}

void take_damage::SharedDtor() {
}

void take_damage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const take_damage& take_damage::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_take_damage_event_2eproto.base);
  return *internal_default_instance();
}


void take_damage::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.take_damage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&damage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&damage_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* take_damage::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<take_damage*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 damage = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_damage(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 type = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_type(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool take_damage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.take_damage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 damage = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.take_damage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.take_damage)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void take_damage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.take_damage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 damage = 1;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->damage(), output);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->type(), output);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.take_damage)
}

::google::protobuf::uint8* take_damage::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.take_damage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 damage = 1;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->damage(), target);
  }

  // int32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->type(), target);
  }

  // int32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.take_damage)
  return target;
}

size_t take_damage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.take_damage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 damage = 1;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  // int32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 id = 3;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void take_damage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.take_damage)
  GOOGLE_DCHECK_NE(&from, this);
  const take_damage* source =
      ::google::protobuf::DynamicCastToGenerated<take_damage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.take_damage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.take_damage)
    MergeFrom(*source);
  }
}

void take_damage::MergeFrom(const take_damage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.take_damage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.damage() != 0) {
    set_damage(from.damage());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void take_damage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.take_damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void take_damage::CopyFrom(const take_damage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.take_damage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool take_damage::IsInitialized() const {
  return true;
}

void take_damage::Swap(take_damage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void take_damage::InternalSwap(take_damage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(damage_, other->damage_);
  swap(type_, other->type_);
  swap(id_, other->id_);
}

::google::protobuf::Metadata take_damage::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_event_2eproto);
  return ::file_level_metadata_event_2eproto[kIndexInFileMessages];
}


// ===================================================================

void make_bullet::InitAsDefaultInstance() {
}
class make_bullet::HasBitSetters {
 public:
};

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int make_bullet::kParentFieldNumber;
const int make_bullet::kVectorXFieldNumber;
const int make_bullet::kVectorYFieldNumber;
const int make_bullet::kBulletIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

make_bullet::make_bullet()
  : ::google::protobuf::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:msg.make_bullet)
}
make_bullet::make_bullet(const make_bullet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&parent_, &from.parent_,
    static_cast<size_t>(reinterpret_cast<char*>(&bullet_id_) -
    reinterpret_cast<char*>(&parent_)) + sizeof(bullet_id_));
  // @@protoc_insertion_point(copy_constructor:msg.make_bullet)
}

void make_bullet::SharedCtor() {
  ::memset(&parent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bullet_id_) -
      reinterpret_cast<char*>(&parent_)) + sizeof(bullet_id_));
}

make_bullet::~make_bullet() {
  // @@protoc_insertion_point(destructor:msg.make_bullet)
  SharedDtor();
}

void make_bullet::SharedDtor() {
}

void make_bullet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const make_bullet& make_bullet::default_instance() {
  ::google::protobuf::internal::InitSCC(&::scc_info_make_bullet_event_2eproto.base);
  return *internal_default_instance();
}


void make_bullet::Clear() {
// @@protoc_insertion_point(message_clear_start:msg.make_bullet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&parent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bullet_id_) -
      reinterpret_cast<char*>(&parent_)) + sizeof(bullet_id_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* make_bullet::_InternalParse(const char* begin, const char* end, void* object,
                  ::google::protobuf::internal::ParseContext* ctx) {
  auto msg = static_cast<make_bullet*>(object);
  ::google::protobuf::int32 size; (void)size;
  int depth; (void)depth;
  ::google::protobuf::uint32 tag;
  ::google::protobuf::internal::ParseFunc parser_till_end; (void)parser_till_end;
  auto ptr = begin;
  while (ptr < end) {
    ptr = ::google::protobuf::io::Parse32(ptr, &tag);
    GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
    switch (tag >> 3) {
      // int32 parent = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) != 8) goto handle_unusual;
        msg->set_parent(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 vector_x = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) != 16) goto handle_unusual;
        msg->set_vector_x(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 vector_y = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) != 24) goto handle_unusual;
        msg->set_vector_y(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      // int32 bullet_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) != 32) goto handle_unusual;
        msg->set_bullet_id(::google::protobuf::internal::ReadVarint(&ptr));
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr);
        break;
      }
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->EndGroup(tag);
          return ptr;
        }
        auto res = UnknownFieldParse(tag, {_InternalParse, msg},
          ptr, end, msg->_internal_metadata_.mutable_unknown_fields(), ctx);
        ptr = res.first;
        GOOGLE_PROTOBUF_PARSER_ASSERT(ptr != nullptr);
        if (res.second) return ptr;
      }
    }  // switch
  }  // while
  return ptr;
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool make_bullet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:msg.make_bullet)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 parent = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (8 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &parent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vector_x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (16 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vector_x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 vector_y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (24 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vector_y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 bullet_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) == (32 & 0xFF)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bullet_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:msg.make_bullet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:msg.make_bullet)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void make_bullet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:msg.make_bullet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent = 1;
  if (this->parent() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->parent(), output);
  }

  // int32 vector_x = 2;
  if (this->vector_x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vector_x(), output);
  }

  // int32 vector_y = 3;
  if (this->vector_y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->vector_y(), output);
  }

  // int32 bullet_id = 4;
  if (this->bullet_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->bullet_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:msg.make_bullet)
}

::google::protobuf::uint8* make_bullet::InternalSerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:msg.make_bullet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 parent = 1;
  if (this->parent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->parent(), target);
  }

  // int32 vector_x = 2;
  if (this->vector_x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vector_x(), target);
  }

  // int32 vector_y = 3;
  if (this->vector_y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->vector_y(), target);
  }

  // int32 bullet_id = 4;
  if (this->bullet_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->bullet_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:msg.make_bullet)
  return target;
}

size_t make_bullet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:msg.make_bullet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 parent = 1;
  if (this->parent() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->parent());
  }

  // int32 vector_x = 2;
  if (this->vector_x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vector_x());
  }

  // int32 vector_y = 3;
  if (this->vector_y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->vector_y());
  }

  // int32 bullet_id = 4;
  if (this->bullet_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bullet_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void make_bullet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:msg.make_bullet)
  GOOGLE_DCHECK_NE(&from, this);
  const make_bullet* source =
      ::google::protobuf::DynamicCastToGenerated<make_bullet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:msg.make_bullet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:msg.make_bullet)
    MergeFrom(*source);
  }
}

void make_bullet::MergeFrom(const make_bullet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:msg.make_bullet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.parent() != 0) {
    set_parent(from.parent());
  }
  if (from.vector_x() != 0) {
    set_vector_x(from.vector_x());
  }
  if (from.vector_y() != 0) {
    set_vector_y(from.vector_y());
  }
  if (from.bullet_id() != 0) {
    set_bullet_id(from.bullet_id());
  }
}

void make_bullet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:msg.make_bullet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void make_bullet::CopyFrom(const make_bullet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:msg.make_bullet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool make_bullet::IsInitialized() const {
  return true;
}

void make_bullet::Swap(make_bullet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void make_bullet::InternalSwap(make_bullet* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(parent_, other->parent_);
  swap(vector_x_, other->vector_x_);
  swap(vector_y_, other->vector_y_);
  swap(bullet_id_, other->bullet_id_);
}

::google::protobuf::Metadata make_bullet::GetMetadata() const {
  ::google::protobuf::internal::AssignDescriptors(&::assign_descriptors_table_event_2eproto);
  return ::file_level_metadata_event_2eproto[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace msg
namespace google {
namespace protobuf {
template<> PROTOBUF_NOINLINE ::msg::main* Arena::CreateMaybeMessage< ::msg::main >(Arena* arena) {
  return Arena::CreateInternal< ::msg::main >(arena);
}
template<> PROTOBUF_NOINLINE ::msg::make_move* Arena::CreateMaybeMessage< ::msg::make_move >(Arena* arena) {
  return Arena::CreateInternal< ::msg::make_move >(arena);
}
template<> PROTOBUF_NOINLINE ::msg::make_actor* Arena::CreateMaybeMessage< ::msg::make_actor >(Arena* arena) {
  return Arena::CreateInternal< ::msg::make_actor >(arena);
}
template<> PROTOBUF_NOINLINE ::msg::take_damage* Arena::CreateMaybeMessage< ::msg::take_damage >(Arena* arena) {
  return Arena::CreateInternal< ::msg::take_damage >(arena);
}
template<> PROTOBUF_NOINLINE ::msg::make_bullet* Arena::CreateMaybeMessage< ::msg::make_bullet >(Arena* arena) {
  return Arena::CreateInternal< ::msg::make_bullet >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
