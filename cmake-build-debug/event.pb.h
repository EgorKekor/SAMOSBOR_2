// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: event.proto

#ifndef PROTOBUF_INCLUDED_event_2eproto
#define PROTOBUF_INCLUDED_event_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_event_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_event_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_event_2eproto();
namespace msg {
class main;
class mainDefaultTypeInternal;
extern mainDefaultTypeInternal _main_default_instance_;
class make_actor;
class make_actorDefaultTypeInternal;
extern make_actorDefaultTypeInternal _make_actor_default_instance_;
class make_bullet;
class make_bulletDefaultTypeInternal;
extern make_bulletDefaultTypeInternal _make_bullet_default_instance_;
class make_move;
class make_moveDefaultTypeInternal;
extern make_moveDefaultTypeInternal _make_move_default_instance_;
class take_damage;
class take_damageDefaultTypeInternal;
extern take_damageDefaultTypeInternal _take_damage_default_instance_;
}  // namespace msg
namespace google {
namespace protobuf {
template<> ::msg::main* Arena::CreateMaybeMessage<::msg::main>(Arena*);
template<> ::msg::make_actor* Arena::CreateMaybeMessage<::msg::make_actor>(Arena*);
template<> ::msg::make_bullet* Arena::CreateMaybeMessage<::msg::make_bullet>(Arena*);
template<> ::msg::make_move* Arena::CreateMaybeMessage<::msg::make_move>(Arena*);
template<> ::msg::take_damage* Arena::CreateMaybeMessage<::msg::take_damage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace msg {

// ===================================================================

class main :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.main) */ {
 public:
  main();
  virtual ~main();

  main(const main& from);

  inline main& operator=(const main& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  main(main&& from) noexcept
    : main() {
    *this = ::std::move(from);
  }

  inline main& operator=(main&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const main& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const main* internal_default_instance() {
    return reinterpret_cast<const main*>(
               &_main_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(main* other);
  friend void swap(main& a, main& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline main* New() const final {
    return CreateMaybeMessage<main>(nullptr);
  }

  main* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<main>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const main& from);
  void MergeFrom(const main& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(main* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 client_command = 3;
  int client_command_size() const;
  void clear_client_command();
  static const int kClientCommandFieldNumber = 3;
  ::google::protobuf::int32 client_command(int index) const;
  void set_client_command(int index, ::google::protobuf::int32 value);
  void add_client_command(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      client_command() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_client_command();

  // repeated .msg.make_bullet bullet = 4;
  int bullet_size() const;
  void clear_bullet();
  static const int kBulletFieldNumber = 4;
  ::msg::make_bullet* mutable_bullet(int index);
  ::google::protobuf::RepeatedPtrField< ::msg::make_bullet >*
      mutable_bullet();
  const ::msg::make_bullet& bullet(int index) const;
  ::msg::make_bullet* add_bullet();
  const ::google::protobuf::RepeatedPtrField< ::msg::make_bullet >&
      bullet() const;

  // repeated .msg.make_move move = 5;
  int move_size() const;
  void clear_move();
  static const int kMoveFieldNumber = 5;
  ::msg::make_move* mutable_move(int index);
  ::google::protobuf::RepeatedPtrField< ::msg::make_move >*
      mutable_move();
  const ::msg::make_move& move(int index) const;
  ::msg::make_move* add_move();
  const ::google::protobuf::RepeatedPtrField< ::msg::make_move >&
      move() const;

  // repeated .msg.make_actor actor = 6;
  int actor_size() const;
  void clear_actor();
  static const int kActorFieldNumber = 6;
  ::msg::make_actor* mutable_actor(int index);
  ::google::protobuf::RepeatedPtrField< ::msg::make_actor >*
      mutable_actor();
  const ::msg::make_actor& actor(int index) const;
  ::msg::make_actor* add_actor();
  const ::google::protobuf::RepeatedPtrField< ::msg::make_actor >&
      actor() const;

  // repeated .msg.take_damage damage = 7;
  int damage_size() const;
  void clear_damage();
  static const int kDamageFieldNumber = 7;
  ::msg::take_damage* mutable_damage(int index);
  ::google::protobuf::RepeatedPtrField< ::msg::take_damage >*
      mutable_damage();
  const ::msg::take_damage& damage(int index) const;
  ::msg::take_damage* add_damage();
  const ::google::protobuf::RepeatedPtrField< ::msg::take_damage >&
      damage() const;

  // int32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 flag = 2;
  void clear_flag();
  static const int kFlagFieldNumber = 2;
  ::google::protobuf::int32 flag() const;
  void set_flag(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.main)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > client_command_;
  mutable std::atomic<int> _client_command_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::msg::make_bullet > bullet_;
  ::google::protobuf::RepeatedPtrField< ::msg::make_move > move_;
  ::google::protobuf::RepeatedPtrField< ::msg::make_actor > actor_;
  ::google::protobuf::RepeatedPtrField< ::msg::take_damage > damage_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_event_2eproto;
};
// -------------------------------------------------------------------

class make_move :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.make_move) */ {
 public:
  make_move();
  virtual ~make_move();

  make_move(const make_move& from);

  inline make_move& operator=(const make_move& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  make_move(make_move&& from) noexcept
    : make_move() {
    *this = ::std::move(from);
  }

  inline make_move& operator=(make_move&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const make_move& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const make_move* internal_default_instance() {
    return reinterpret_cast<const make_move*>(
               &_make_move_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(make_move* other);
  friend void swap(make_move& a, make_move& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline make_move* New() const final {
    return CreateMaybeMessage<make_move>(nullptr);
  }

  make_move* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<make_move>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const make_move& from);
  void MergeFrom(const make_move& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(make_move* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // int32 x = 3;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 4;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.make_move)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_event_2eproto;
};
// -------------------------------------------------------------------

class make_actor :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.make_actor) */ {
 public:
  make_actor();
  virtual ~make_actor();

  make_actor(const make_actor& from);

  inline make_actor& operator=(const make_actor& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  make_actor(make_actor&& from) noexcept
    : make_actor() {
    *this = ::std::move(from);
  }

  inline make_actor& operator=(make_actor&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const make_actor& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const make_actor* internal_default_instance() {
    return reinterpret_cast<const make_actor*>(
               &_make_actor_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(make_actor* other);
  friend void swap(make_actor& a, make_actor& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline make_actor* New() const final {
    return CreateMaybeMessage<make_actor>(nullptr);
  }

  make_actor* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<make_actor>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const make_actor& from);
  void MergeFrom(const make_actor& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(make_actor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  ::google::protobuf::int32 name() const;
  void set_name(::google::protobuf::int32 value);

  // int32 creator_id = 2;
  void clear_creator_id();
  static const int kCreatorIdFieldNumber = 2;
  ::google::protobuf::int32 creator_id() const;
  void set_creator_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.make_actor)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 name_;
  ::google::protobuf::int32 creator_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_event_2eproto;
};
// -------------------------------------------------------------------

class take_damage :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.take_damage) */ {
 public:
  take_damage();
  virtual ~take_damage();

  take_damage(const take_damage& from);

  inline take_damage& operator=(const take_damage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  take_damage(take_damage&& from) noexcept
    : take_damage() {
    *this = ::std::move(from);
  }

  inline take_damage& operator=(take_damage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const take_damage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const take_damage* internal_default_instance() {
    return reinterpret_cast<const take_damage*>(
               &_take_damage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(take_damage* other);
  friend void swap(take_damage& a, take_damage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline take_damage* New() const final {
    return CreateMaybeMessage<take_damage>(nullptr);
  }

  take_damage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<take_damage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const take_damage& from);
  void MergeFrom(const take_damage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(take_damage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 damage = 1;
  void clear_damage();
  static const int kDamageFieldNumber = 1;
  ::google::protobuf::int32 damage() const;
  void set_damage(::google::protobuf::int32 value);

  // int32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::int32 type() const;
  void set_type(::google::protobuf::int32 value);

  // int32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.take_damage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 damage_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_event_2eproto;
};
// -------------------------------------------------------------------

class make_bullet :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:msg.make_bullet) */ {
 public:
  make_bullet();
  virtual ~make_bullet();

  make_bullet(const make_bullet& from);

  inline make_bullet& operator=(const make_bullet& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  make_bullet(make_bullet&& from) noexcept
    : make_bullet() {
    *this = ::std::move(from);
  }

  inline make_bullet& operator=(make_bullet&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const make_bullet& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const make_bullet* internal_default_instance() {
    return reinterpret_cast<const make_bullet*>(
               &_make_bullet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(make_bullet* other);
  friend void swap(make_bullet& a, make_bullet& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline make_bullet* New() const final {
    return CreateMaybeMessage<make_bullet>(nullptr);
  }

  make_bullet* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<make_bullet>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const make_bullet& from);
  void MergeFrom(const make_bullet& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(make_bullet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 parent = 1;
  void clear_parent();
  static const int kParentFieldNumber = 1;
  ::google::protobuf::int32 parent() const;
  void set_parent(::google::protobuf::int32 value);

  // int32 vector_x = 2;
  void clear_vector_x();
  static const int kVectorXFieldNumber = 2;
  ::google::protobuf::int32 vector_x() const;
  void set_vector_x(::google::protobuf::int32 value);

  // int32 vector_y = 3;
  void clear_vector_y();
  static const int kVectorYFieldNumber = 3;
  ::google::protobuf::int32 vector_y() const;
  void set_vector_y(::google::protobuf::int32 value);

  // int32 bullet_id = 4;
  void clear_bullet_id();
  static const int kBulletIdFieldNumber = 4;
  ::google::protobuf::int32 bullet_id() const;
  void set_bullet_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:msg.make_bullet)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 parent_;
  ::google::protobuf::int32 vector_x_;
  ::google::protobuf::int32 vector_y_;
  ::google::protobuf::int32 bullet_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_event_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// main

// int32 id = 1;
inline void main::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 main::id() const {
  // @@protoc_insertion_point(field_get:msg.main.id)
  return id_;
}
inline void main::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.main.id)
}

// int32 flag = 2;
inline void main::clear_flag() {
  flag_ = 0;
}
inline ::google::protobuf::int32 main::flag() const {
  // @@protoc_insertion_point(field_get:msg.main.flag)
  return flag_;
}
inline void main::set_flag(::google::protobuf::int32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:msg.main.flag)
}

// repeated int32 client_command = 3;
inline int main::client_command_size() const {
  return client_command_.size();
}
inline void main::clear_client_command() {
  client_command_.Clear();
}
inline ::google::protobuf::int32 main::client_command(int index) const {
  // @@protoc_insertion_point(field_get:msg.main.client_command)
  return client_command_.Get(index);
}
inline void main::set_client_command(int index, ::google::protobuf::int32 value) {
  client_command_.Set(index, value);
  // @@protoc_insertion_point(field_set:msg.main.client_command)
}
inline void main::add_client_command(::google::protobuf::int32 value) {
  client_command_.Add(value);
  // @@protoc_insertion_point(field_add:msg.main.client_command)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
main::client_command() const {
  // @@protoc_insertion_point(field_list:msg.main.client_command)
  return client_command_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
main::mutable_client_command() {
  // @@protoc_insertion_point(field_mutable_list:msg.main.client_command)
  return &client_command_;
}

// repeated .msg.make_bullet bullet = 4;
inline int main::bullet_size() const {
  return bullet_.size();
}
inline void main::clear_bullet() {
  bullet_.Clear();
}
inline ::msg::make_bullet* main::mutable_bullet(int index) {
  // @@protoc_insertion_point(field_mutable:msg.main.bullet)
  return bullet_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::msg::make_bullet >*
main::mutable_bullet() {
  // @@protoc_insertion_point(field_mutable_list:msg.main.bullet)
  return &bullet_;
}
inline const ::msg::make_bullet& main::bullet(int index) const {
  // @@protoc_insertion_point(field_get:msg.main.bullet)
  return bullet_.Get(index);
}
inline ::msg::make_bullet* main::add_bullet() {
  // @@protoc_insertion_point(field_add:msg.main.bullet)
  return bullet_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::make_bullet >&
main::bullet() const {
  // @@protoc_insertion_point(field_list:msg.main.bullet)
  return bullet_;
}

// repeated .msg.make_move move = 5;
inline int main::move_size() const {
  return move_.size();
}
inline void main::clear_move() {
  move_.Clear();
}
inline ::msg::make_move* main::mutable_move(int index) {
  // @@protoc_insertion_point(field_mutable:msg.main.move)
  return move_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::msg::make_move >*
main::mutable_move() {
  // @@protoc_insertion_point(field_mutable_list:msg.main.move)
  return &move_;
}
inline const ::msg::make_move& main::move(int index) const {
  // @@protoc_insertion_point(field_get:msg.main.move)
  return move_.Get(index);
}
inline ::msg::make_move* main::add_move() {
  // @@protoc_insertion_point(field_add:msg.main.move)
  return move_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::make_move >&
main::move() const {
  // @@protoc_insertion_point(field_list:msg.main.move)
  return move_;
}

// repeated .msg.make_actor actor = 6;
inline int main::actor_size() const {
  return actor_.size();
}
inline void main::clear_actor() {
  actor_.Clear();
}
inline ::msg::make_actor* main::mutable_actor(int index) {
  // @@protoc_insertion_point(field_mutable:msg.main.actor)
  return actor_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::msg::make_actor >*
main::mutable_actor() {
  // @@protoc_insertion_point(field_mutable_list:msg.main.actor)
  return &actor_;
}
inline const ::msg::make_actor& main::actor(int index) const {
  // @@protoc_insertion_point(field_get:msg.main.actor)
  return actor_.Get(index);
}
inline ::msg::make_actor* main::add_actor() {
  // @@protoc_insertion_point(field_add:msg.main.actor)
  return actor_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::make_actor >&
main::actor() const {
  // @@protoc_insertion_point(field_list:msg.main.actor)
  return actor_;
}

// repeated .msg.take_damage damage = 7;
inline int main::damage_size() const {
  return damage_.size();
}
inline void main::clear_damage() {
  damage_.Clear();
}
inline ::msg::take_damage* main::mutable_damage(int index) {
  // @@protoc_insertion_point(field_mutable:msg.main.damage)
  return damage_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::msg::take_damage >*
main::mutable_damage() {
  // @@protoc_insertion_point(field_mutable_list:msg.main.damage)
  return &damage_;
}
inline const ::msg::take_damage& main::damage(int index) const {
  // @@protoc_insertion_point(field_get:msg.main.damage)
  return damage_.Get(index);
}
inline ::msg::take_damage* main::add_damage() {
  // @@protoc_insertion_point(field_add:msg.main.damage)
  return damage_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::msg::take_damage >&
main::damage() const {
  // @@protoc_insertion_point(field_list:msg.main.damage)
  return damage_;
}

// -------------------------------------------------------------------

// make_move

// int32 type = 1;
inline void make_move::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 make_move::type() const {
  // @@protoc_insertion_point(field_get:msg.make_move.type)
  return type_;
}
inline void make_move::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.make_move.type)
}

// int32 id = 2;
inline void make_move::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 make_move::id() const {
  // @@protoc_insertion_point(field_get:msg.make_move.id)
  return id_;
}
inline void make_move::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.make_move.id)
}

// int32 x = 3;
inline void make_move::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 make_move::x() const {
  // @@protoc_insertion_point(field_get:msg.make_move.x)
  return x_;
}
inline void make_move::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:msg.make_move.x)
}

// int32 y = 4;
inline void make_move::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 make_move::y() const {
  // @@protoc_insertion_point(field_get:msg.make_move.y)
  return y_;
}
inline void make_move::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:msg.make_move.y)
}

// -------------------------------------------------------------------

// make_actor

// int32 name = 1;
inline void make_actor::clear_name() {
  name_ = 0;
}
inline ::google::protobuf::int32 make_actor::name() const {
  // @@protoc_insertion_point(field_get:msg.make_actor.name)
  return name_;
}
inline void make_actor::set_name(::google::protobuf::int32 value) {
  
  name_ = value;
  // @@protoc_insertion_point(field_set:msg.make_actor.name)
}

// int32 creator_id = 2;
inline void make_actor::clear_creator_id() {
  creator_id_ = 0;
}
inline ::google::protobuf::int32 make_actor::creator_id() const {
  // @@protoc_insertion_point(field_get:msg.make_actor.creator_id)
  return creator_id_;
}
inline void make_actor::set_creator_id(::google::protobuf::int32 value) {
  
  creator_id_ = value;
  // @@protoc_insertion_point(field_set:msg.make_actor.creator_id)
}

// -------------------------------------------------------------------

// take_damage

// int32 damage = 1;
inline void take_damage::clear_damage() {
  damage_ = 0;
}
inline ::google::protobuf::int32 take_damage::damage() const {
  // @@protoc_insertion_point(field_get:msg.take_damage.damage)
  return damage_;
}
inline void take_damage::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:msg.take_damage.damage)
}

// int32 type = 2;
inline void take_damage::clear_type() {
  type_ = 0;
}
inline ::google::protobuf::int32 take_damage::type() const {
  // @@protoc_insertion_point(field_get:msg.take_damage.type)
  return type_;
}
inline void take_damage::set_type(::google::protobuf::int32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:msg.take_damage.type)
}

// int32 id = 3;
inline void take_damage::clear_id() {
  id_ = 0;
}
inline ::google::protobuf::int32 take_damage::id() const {
  // @@protoc_insertion_point(field_get:msg.take_damage.id)
  return id_;
}
inline void take_damage::set_id(::google::protobuf::int32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:msg.take_damage.id)
}

// -------------------------------------------------------------------

// make_bullet

// int32 parent = 1;
inline void make_bullet::clear_parent() {
  parent_ = 0;
}
inline ::google::protobuf::int32 make_bullet::parent() const {
  // @@protoc_insertion_point(field_get:msg.make_bullet.parent)
  return parent_;
}
inline void make_bullet::set_parent(::google::protobuf::int32 value) {
  
  parent_ = value;
  // @@protoc_insertion_point(field_set:msg.make_bullet.parent)
}

// int32 vector_x = 2;
inline void make_bullet::clear_vector_x() {
  vector_x_ = 0;
}
inline ::google::protobuf::int32 make_bullet::vector_x() const {
  // @@protoc_insertion_point(field_get:msg.make_bullet.vector_x)
  return vector_x_;
}
inline void make_bullet::set_vector_x(::google::protobuf::int32 value) {
  
  vector_x_ = value;
  // @@protoc_insertion_point(field_set:msg.make_bullet.vector_x)
}

// int32 vector_y = 3;
inline void make_bullet::clear_vector_y() {
  vector_y_ = 0;
}
inline ::google::protobuf::int32 make_bullet::vector_y() const {
  // @@protoc_insertion_point(field_get:msg.make_bullet.vector_y)
  return vector_y_;
}
inline void make_bullet::set_vector_y(::google::protobuf::int32 value) {
  
  vector_y_ = value;
  // @@protoc_insertion_point(field_set:msg.make_bullet.vector_y)
}

// int32 bullet_id = 4;
inline void make_bullet::clear_bullet_id() {
  bullet_id_ = 0;
}
inline ::google::protobuf::int32 make_bullet::bullet_id() const {
  // @@protoc_insertion_point(field_get:msg.make_bullet.bullet_id)
  return bullet_id_;
}
inline void make_bullet::set_bullet_id(::google::protobuf::int32 value) {
  
  bullet_id_ = value;
  // @@protoc_insertion_point(field_set:msg.make_bullet.bullet_id)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace msg

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_event_2eproto
